/*
 * 1Source Ledger API
 * 1Source Ledger API provides client access to the 1Source Ledger. You can find out more about 1Source at [https://equilend.com](https://equilend.com).  This specification is work in progress. The design is meant to model the securities lending life cycle in as clean a way as possible while being robust enough to easily translate to ISLA CDM workflows and data model.  API specification is the intellectual property of EquiLend LLC and should not be copied or disseminated in any way. 
 *
 * OpenAPI spec version: 1.0.5
 * Contact: 1source_help@equilend.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.v1_0_5_20240611.client.model;

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import com.google.gson.annotations.SerializedName;

import io.swagger.v3.oas.annotations.media.Schema;
/**
 * Rerate
 */

@jakarta.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2024-06-11T17:48:35.601669504Z[GMT]")

public class Rerate implements Serializable{
  private static final long serialVersionUID = 1L;
  @SerializedName("rerateId")
  private String rerateId = null;

  @SerializedName("contractId")
  private String contractId = null;

  @SerializedName("status")
  private RerateStatus status = null;

  @SerializedName("executionVenue")
  private Venue executionVenue = null;

  @SerializedName("rate")
  private Rate rate = null;

  @SerializedName("rerate")
  private Rate rerate = null;

  @SerializedName("dateProposed")
  private Date dateProposed = null;

  @SerializedName("lastUpdateDatetime")
  private Date lastUpdateDatetime = null;

  public Rerate rerateId(String rerateId) {
    this.rerateId = rerateId;
    return this;
  }

   /**
   * Get rerateId
   * @return rerateId
  **/
  @Schema(required = true, description = "")
  public String getRerateId() {
    return rerateId;
  }

  public void setRerateId(String rerateId) {
    this.rerateId = rerateId;
  }

  public Rerate contractId(String contractId) {
    this.contractId = contractId;
    return this;
  }

   /**
   * Get contractId
   * @return contractId
  **/
  @Schema(required = true, description = "")
  public String getContractId() {
    return contractId;
  }

  public void setContractId(String contractId) {
    this.contractId = contractId;
  }

  public Rerate status(RerateStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(required = true, description = "")
  public RerateStatus getStatus() {
    return status;
  }

  public void setStatus(RerateStatus status) {
    this.status = status;
  }

  public Rerate executionVenue(Venue executionVenue) {
    this.executionVenue = executionVenue;
    return this;
  }

   /**
   * Get executionVenue
   * @return executionVenue
  **/
  @Schema(description = "")
  public Venue getExecutionVenue() {
    return executionVenue;
  }

  public void setExecutionVenue(Venue executionVenue) {
    this.executionVenue = executionVenue;
  }

  public Rerate rate(Rate rate) {
    this.rate = rate;
    return this;
  }

   /**
   * Get rate
   * @return rate
  **/
  @Schema(required = true, description = "")
  public Rate getRate() {
    return rate;
  }

  public void setRate(Rate rate) {
    this.rate = rate;
  }

  public Rerate rerate(Rate rerate) {
    this.rerate = rerate;
    return this;
  }

   /**
   * Get rerate
   * @return rerate
  **/
  @Schema(required = true, description = "")
  public Rate getRerate() {
    return rerate;
  }

  public void setRerate(Rate rerate) {
    this.rerate = rerate;
  }

  public Rerate dateProposed(Date dateProposed) {
    this.dateProposed = dateProposed;
    return this;
  }

   /**
   * Get dateProposed
   * @return dateProposed
  **/
  @Schema(description = "")
  public Date getDateProposed() {
    return dateProposed;
  }

  public void setDateProposed(Date dateProposed) {
    this.dateProposed = dateProposed;
  }

  public Rerate lastUpdateDatetime(Date lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
    return this;
  }

   /**
   * Get lastUpdateDatetime
   * @return lastUpdateDatetime
  **/
  @Schema(required = true, description = "")
  public Date getLastUpdateDatetime() {
    return lastUpdateDatetime;
  }

  public void setLastUpdateDatetime(Date lastUpdateDatetime) {
    this.lastUpdateDatetime = lastUpdateDatetime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Rerate rerate = (Rerate) o;
    return Objects.equals(this.rerateId, rerate.rerateId) &&
        Objects.equals(this.contractId, rerate.contractId) &&
        Objects.equals(this.status, rerate.status) &&
        Objects.equals(this.executionVenue, rerate.executionVenue) &&
        Objects.equals(this.rate, rerate.rate) &&
        Objects.equals(this.rerate, rerate.rerate) &&
        Objects.equals(this.dateProposed, rerate.dateProposed) &&
        Objects.equals(this.lastUpdateDatetime, rerate.lastUpdateDatetime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rerateId, contractId, status, executionVenue, rate, rerate, dateProposed, lastUpdateDatetime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Rerate {\n");
    
    sb.append("    rerateId: ").append(toIndentedString(rerateId)).append("\n");
    sb.append("    contractId: ").append(toIndentedString(contractId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    executionVenue: ").append(toIndentedString(executionVenue)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    rerate: ").append(toIndentedString(rerate)).append("\n");
    sb.append("    dateProposed: ").append(toIndentedString(dateProposed)).append("\n");
    sb.append("    lastUpdateDatetime: ").append(toIndentedString(lastUpdateDatetime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
